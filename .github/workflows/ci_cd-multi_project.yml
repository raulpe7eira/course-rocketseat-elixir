name: CI/CD > Multi-project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and test

    defaults:
      run:
        working-directory: ${{ matrix.project.directory }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - directory: chapter-i/module-1/list_filter
            analyze: false
            cover: false
            deploy: false

          - directory: chapter-i/module-1/list_length
            analyze: false
            cover: false
            deploy: false

          - directory: chapter-i/module-1/sum_list
            analyze: false
            cover: false
            deploy: false

          - directory: chapter-i/module-2/reports_generator
            analyze: true
            cover: false
            deploy: false

          - directory: chapter-i/module-2/reports_hours
            analyze: true
            cover: false
            deploy: false

          - directory: chapter-i/module-2/reports_hours_parallel
            analyze: true
            cover: false
            deploy: false

          - directory: chapter-ii/module-3/exlivery
            analyze: true
            cover: false
            deploy: false

          - directory: chapter-ii/module-3/flightex
            analyze: true
            cover: false
            deploy: false

          - directory: chapter-iii/module-4/daily_meals
            flag: chapter_iii-module_4-daily_meals
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-iii/module-4/rockelivery
            flag: chapter_iii-module_4-rockelivery
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-iv/module-5/daily_meals
            flag: chapter_iv-module_5-daily_meals
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-iv/module-5/rockelivery
            flag: chapter_iv-module_5-rockelivery
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-iv/module-6/codex
            flag: chapter_iv-module_6-codex
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-iv/module-6/rockelivery
            flag: chapter_iv-module_6-rockelivery
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-v/module-7/codex
            flag: chapter_v-module_7-codex
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-v/module-7/rockelivery
            flag: chapter_v-module_7-rockelivery
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-v/module-8/queue
            flag: chapter_v-module_8-queue
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-v/module-8/rockelivery
            flag: chapter_v-module_8-rockelivery
            analyze: true
            cover: true
            deploy: false

          - directory: chapter-vi/module-9/rockelivery
            flag: chapter_vi-module_9-rockelivery
            analyze: true
            cover: true
            deploy: true

    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: '1.11.3' # Define the elixir version [required]
          otp-version: '23.2' # Define the OTP version [required]

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted

      - name: Compile code
        env:
          MIX_ENV: test
        run: mix compile

      - name: Analyze code
        if: matrix.project.analyze
        env:
          MIX_ENV: test
        run: mix credo --strict

      - name: Run tests
        env:
          MIX_ENV: test
        run: mix test

      - name: Generate coverage report
        if: matrix.project.cover
        env:
          MIX_ENV: test
        run: mix coveralls.json

      - name: Upload coverage to Codecov
        if: matrix.project.cover
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          flags: ${{ matrix.project.flag }}
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy release

    needs: build
    if: github.ref == 'refs/heads/main'

    defaults:
      run:
        working-directory: ${{ matrix.project.directory }}

    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.build.matrix) }}

    steps:
      - uses: actions/checkout@v2
        if: matrix.project.deploy

      - name: Set up Python
        if: matrix.project.deploy
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.1

      - name: Upload release to Gigalixir
        if: matrix.project.deploy
        uses: mhanberg/gigalixir-action@v0.4.0
        with:
          GIGALIXIR_APP: webbed-rough-dromedary
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MIGRATIONS: true
